/******************************************************************************
 *
 *             Copyright 2016 Mentor Graphics Corporation
 *                        All rights reserved
 *
 * THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION WHICH IS THE
 * PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS AND IS SUBJECT TO
 * LICENSE TERMS.
 *
 ******************************************************************************
 * This file is automatically generated by Configuration tool.
 * Do not edit manually.
 * Generated by VSC tool Version 2.5.4
 *
 *=============================================================================
 *
 * Module:       CanIf
 *
 * File Name:    CanIf_Cfg.h
 *
 * Description:  This header file contains pre compile time configuration
 *               of CanIf module
 *
 *****************************************************************************/
#ifndef CANIF_CFG_H
#define CANIF_CFG_H

/**
 * \file       CanIf_Cfg.h
 * \brief      This header file contains pre compile time configuration of
 *             CanIf module
 * \author     Tool generated
 * \addtogroup CanIf
 * \{
 */

/*=============================== INCLUSIONS ================================*/
#ifndef CANIF_SYM_NOT_NEEDED
#include "CanIf_Lcfg.h"
#endif

/*============================ MACRO DEFINITIONS ============================*/

/**
 * \defgroup CanIf_Macros General Macros
 *  Describes the general Macros used in the CanIf Module
 */

/*\{*/

/**
 * \brief Version information of CanIf_Cfg.h file
 */

/**
 * \brief AUTOSAR specification information: Major version
 *
 */
#ifdef CANIF_CFG_AR_MAJOR_VERSION
    #error CANIF_CFG_AR_MAJOR_VERSION   already defined
#endif
#define CANIF_CFG_AR_MAJOR_VERSION         (4u)

/**
 * \brief AUTOSAR specification information: Minor version
 *
 */
#ifdef CANIF_CFG_AR_MINOR_VERSION
    #error CANIF_CFG_AR_MINOR_VERSION   already defined
#endif
#define CANIF_CFG_AR_MINOR_VERSION         (2u)

/**
 * \brief AUTOSAR specification information: Patch version
 *
 */
#ifdef CANIF_CFG_AR_RELEASE_VERSION
    #error CANIF_CFG_AR_RELEASE_VERSION   already defined
#endif
#define CANIF_CFG_AR_RELEASE_VERSION         (2u)


/**
 * \brief File version information: Major version
 *
 */
#ifdef CANIF_CFG_SW_MAJOR_VERSION
    #error CANIF_CFG_SW_MAJOR_VERSION   already defined
#endif
#define CANIF_CFG_SW_MAJOR_VERSION         (5u)

/**
 * \brief File version information: Minor version
 *
 */
#ifdef CANIF_CFG_SW_MINOR_VERSION
    #error CANIF_CFG_SW_MINOR_VERSION   already defined
#endif
#define CANIF_CFG_SW_MINOR_VERSION         (1u)


/**
 * \brief File version information: Patch version
 *
 */
#ifdef CANIF_CFG_SW_PATCH_VERSION
    #error CANIF_CFG_SW_PATCH_VERSION   already defined
#endif
#define CANIF_CFG_SW_PATCH_VERSION         (0u)

/**
 * \brief Selects the variant of CANIF module.
 *
 */
#define CANIF_VARIANT                     (CANIF_VARIANT_POST_BUILD)

/**
 * \brief Selects whether the DLC check is supported.
 *
 */
#define CANIF_DLC_CHECK                   (STD_ON)

/**
 * \brief Selects the filtering algorithm used during reception
 *
 */
#define CANIF_SOFTWARE_FILTER_TYPE        (CANIF_ALG_BINARY)

/**
 * \brief Enables and disables the development error detection and
 *  notification  mechanism. 
 *
 */
#define CANIF_DEV_ERROR_DETECT            (STD_OFF)

/**
 * \brief Selects support for multiple CAN Drivers.
 *
 */
#define CANIF_MULTIPLE_DRIVER_SUPPORT     (STD_OFF)

/**
 * \brief Enables / Disables the API CanIf_ReadRxPduData()
 *  for reading received L-PDU data.
 *
 */
#define CANIF_READRXPDU_DATA_API           (STD_OFF)

/**
 * \brief CanIf_ReadRxPduNotifyStatus API is needed or not
 *
 */
#define CANIF_READRXPDU_NOTIF_STATUS_API   (STD_OFF)

/**
 * \brief Enables and disables the API for reading the
 *  notification status of transmit and receive L-PDUs.
 *
 */
#define CANIF_READTXPDU_NOTIF_STATUS_API   (STD_OFF)

/**
 * \brief Enables and disables the API for reconfiguration
 *  of the CAN Identifier for each Transmit L-PDU.
 *
 */
#define CANIF_SETDYNAMICTXID_API                            (STD_OFF)

/**
 * \brief Enables and disables dummy API for upper 
 * layer modules which allows to request the cancellation of an I-PDU.
 */
#define CANIF_CANCEL_TRANSMIT_SUPPORT                      (STD_ON)


/**
 * \brief Enables and disables the API for reading the
 *  version information about the  CAN Interface.
 *
 */
#define CANIF_VERSION_INFO_API                              (STD_ON)


/**
 * \brief Enables and disables the buffering of transmit L-PDUs
 * (rejected by the CanDrv) within the CAN Interface module.
 *
 */
#define CANIF_TX_BUFFERING                                  (STD_OFF)


/**
 * \brief Enables and disables the support for buffer pool.
 *
 */
#define CANIF_TX_BUFFERPOOL_SUPPORT                         (STD_OFF)

/**
 * \brief EEnables and disables the support for receive interrupt decoupling
 *
 */
#define CANIF_RX_INT_DECOUPLING                             (STD_ON)

/**
 * \brief Selects whether transmit cancellation callback function is supported
 *
 */
#define CANIF_TX_CANCELLATION_CBK                           (STD_ON)

/**
 * \brief Selects whether AR403 or AR402 transmit cancellation callback function is used
 *
 */
#define CANIF_TX_CANCELLATION_CBK_FORCE_403_API             (STD_ON)

/**
 * \brief Selects whether transceiver configuration is supported
 *
 */
#define CANIF_TRANSCEIVER_SUPPORT                           (STD_ON)

/**
 * \brief Selects whether CAN extended Id is supported
 *
 */
#define CANIF_EXTENDED_ID_SUPPORT                           (STD_ON)

/**
 * \brief Selects whether Tx confirmation state polling is enabled
 *
 */
#define CANIF_PUBLIC_TXCONFIRM_POLLING_SUPPORT              (STD_ON)

/**
 * \brief Enables and disables the API for validating a former detected wakeup.
 *
 */
#define CANIF_PUBLIC_WAKEUP_CHECK_VALIDATION_API            (STD_OFF)

/**
 * \brief Selects whether only NM messages shall validate a detected wake-up event, or all
 *
 */
#define CANIF_PUBLIC_WAKEUP_CHECK_VALID_BY_NM               (STD_OFF)


/**
 *\brief Enables and disables PN communication support
 *
 */
#define CANIF_PN_SUPPORT                                   (STD_OFF)

/**
 * \brief indicates whether baud Rate change Apis supported or not
 *
 */
#define CANIF_CHANGE_BAUDRATE_SUPPORT                      (STD_OFF)
 

/**
 * \brief Configuration for Can_HwHandleType
 *
 */
#define CANIF_CAN_HW_HANDLE_TYPE_NONE   (0x00)
#define CANIF_CAN_HW_HANDLE_TYPE_UINT8  (0x01)
#define CANIF_CAN_HW_HANDLE_TYPE_UINT16  (0x02)
#define CANIF_PUBLIC_HANDLE_TYPE_ENUM                       (CANIF_CAN_HW_HANDLE_TYPE_UINT16)

/**
 * \brief Selects whether Rx PDU CAN ID range support is enabled
 *
 */
#define CANIF_RX_PDU_RANGE_CFG_SUPPORT                      (STD_OFF)

/**
 * \brief Enables and disables CAN-FD support
 *
 */
#define CANIF_CAN_FD_SUPPORT                                (STD_OFF)

/**
 * \brief Enables or disables support of CANIF_DLC_MAX_LENGTH_CHECK_SUPPORT
 *
 */
#define CANIF_DLC_MAX_LENGTH_CHECK_SUPPORT                     (STD_OFF)

/**
 * \brief Enables and disables support of CANIF_TX_OFFLINE_ACTIVE Pdu mode
 *
 */
#define CANIF_TX_OFFLINE_ACTIVE_SUPPORT                     (STD_OFF)

/**
 * \brief Enables and disables use of the checksum calculation callout function for PDU reception
 *
 */
#define CANIF_CHECKSUM_RX_CALLOUT_SUPPORT                   (STD_OFF)

/**
 * \brief Enables and disables use of the checksum calculation callout function for PDU transmission
 *
 */
#define CANIF_CHECKSUM_TX_CALLOUT_SUPPORT                   (STD_OFF)

/**
 * \brief Enables the CanIf_CheckWakeup API at Pre-Compile-Time.
 *
 */
#define CANIF_WAKEUP_SUPPORT                                 (STD_ON)

/**
 * \brief Pre Compile hash key
 *
 */
#define CANIF_PC_HASH_VALUE ((uint32)912334548U)

/*\}*/ /* Close for the doxygen group CanIf_Macros */


/*\}*/  /* Close for the doxygen group CanIf */

#endif /* End #ifndef CANIF_CFG_H */
/*============================== END OF FILE CanIf_Cfg.h ====================*/

